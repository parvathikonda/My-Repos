.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "J4PSH 1p"
.TH J4PSH 1p "2016-01-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
j4psh \- A JMX Shell
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  j4psh [options] <server>
\&
\&  j4psh \-\-help
\&
\&  j4psh \-\-version
\&
\& Options:
\&   \-\-user <user>           Credential used for authentication   
\&   \-\-password <pwd>  
\&   \-\-proxy <url>           URL to use as proxy proxy
\&   \-\-proxy\-user <user>     Authentication information for a proxy
\&   \-\-proxy\-password <pwd>
\&   \-\-target <jmx\-url>      JSR\-160 JMX Service URL to be used as the target server
\&   \-\-target\-user <user>    Credential for the target server if \-\-target is given
\&   \-\-target\-password <pwd> 
\&   \-\-option key=val        Options for tuning the output of jmx4perl. Known keys are
\&                              format   : Either \*(Aqjson\*(Aq or \*(Aqdata\*(Aq
\&                              booleans : Pair of strings separated by slash to use for printing 
\&                                         boolean values (Default: [true]/[false])
\&                              indent   : Space indent when printing complex data structures 
\&   \-\-config <cfg\-file>     Path to an optional configuration file (default: ~/.j4p)
\&   \-\-color [yes|no]        Color option (default: yes)
.Ve
.PP
An optional argument can be used to directly connect to an agent \s-1URL\s0 or
symbolic name as defined in the configuration file. If not given, the shell
does no initial connect.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBj4psh\fR is a frontend to \f(CW\*(C`JMX::Jmx4Perl\*(C'\fR providing an interactive shell for
accessing \s-1JMX\s0 MBeans on a remote Java server.
.IP "\(bu" 4
Readline and history support based on \s-1GNU\s0 Readline/History as known from other
shells like 'bash'. When \s-1GNU\s0 Readline is not available, a pure Perl Module is
used instead.
.IP "\(bu" 4
Context sensitive argument completion, e.g. on MBean names and attributes.
.IP "\(bu" 4
Colored output (can be switched off)
.IP "\(bu" 4
Multi-Server support
.IP "\(bu" 4
Remote operation via \s-1HTTP\s0(S)
.SH "LICENSE"
.IX Header "LICENSE"
This file is part of jmx4perl.
.PP
Jmx4perl is free software: you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.
.PP
jmx4perl is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with jmx4perl.  If not, see <http://www.gnu.org/licenses/>.
.PP
A commercial license is available as well. Please contact roland@cpan.org for
further details.
.SH "PROFESSIONAL SERVICES"
.IX Header "PROFESSIONAL SERVICES"
Just in case you need professional support for this module (or Nagios or \s-1JMX\s0 in
general), you might want to have a look at
http://www.consol.com/open\-source\-monitoring/consulting/. Contact roland.huss@consol.de for
further information (or use the contact form at http://www.consol.com/contact/)
.SH "AUTHOR"
.IX Header "AUTHOR"
roland@cpan.org
