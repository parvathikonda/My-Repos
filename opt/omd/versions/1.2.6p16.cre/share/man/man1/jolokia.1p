.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "JOLOKIA 1p"
.TH JOLOKIA 1p "2016-01-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
jolokia \- Utility for managing Jolokia agents used by jmx4perl
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  # Execute command \*(Aqcommand\*(Aq with options and additional, command specific 
\&  # arguments
\&  jolokia [options] <command> <arg1> <arg2> ...
\&
\&  # Download the latest Jolokia WAR agent compatible with this jmx4perl release
\&  # into the local directory as \*(Aqjolokia.war\*(Aq
\&  jolokia download
\&
\&  # Print information about a downloaded agent (i.e. its version)
\&  jolokia info jolokia.war
\&
\&  # Repackage the agent to include a security policy
\&  jolokia repack \-\-policy jolokia.war
\&
\&  # Jmx4Perl version
\&  jolokia \-\-version
\&
\&  # Online help
\&  jolokia \-\-help
.Ve
.PP
Options:
.PP
.Vb 11
\&  Command \*(Aqdownload\*(Aq:
\&     \-\-agent <type>[:<version>]    Agent to download. <type> must be one of "war", "osgi", 
\&                                   "osgi\-bundle", "mule" or "jvm". An optional Jolokia version 
\&                                   can be added after a colon.
\&     \-\-outdir <dir>                Output directory for the agent downloaded (default: ".")
\&     \-\-repository <repo\-url>       Repository URL from where to fetch the Jolokia agent. 
\&                                   (default is taken from meta data)
\&     \-\-template <name>[:<version>] Download a template with given name and optional version. E.g.
\&                                   "jolokia\-access.xml:0.83". If used with \-\-agent, the same version
\&                                   as for the agent is used by default
\&     \-\-policy                      Same as \-\-template jolokia\-access.xml
\&
\&  Command \*(Aqinfo\*(Aq:
\&     \-\-verify                      Check signature of given file
\&     \-\-policy                      Print out an embedded jolokia\-access.xml
\&
\&  Command \*(Aqrepack\*(Aq:
\&     \-\-policy                      Adds a jolokia\-access.xml policy file, which is in the current 
\&                                   directory. \-\-no\-policy removes the policy file.
\&     \-\-policy\-file <policy file>   Alternate policy file to use (implies \-\-policy)
\&     \-\-security                    Add security to the web.xml with role \*(Aqjolokia\*(Aq by default. 
\&                                   Use no\-security in order to remove security section completely
\&     \-\-security\-role <role>        Select a different role for WEB security. Implies \-\-security
\&     \-\-no\-jsr160\-proxy             Remove the JSR\-160 proxy declaration from web.xml. Re\-add with 
\&                                   \-\-jsr160\-proxy
\&
\&  General:
\&     \-\-quiet            No output on the standard out
\&     \-\-verbose          Print verbose
\&     \-\-no\-color         Don\*(Aqt use colors
\&     \-\-no\-cache         Fetch meta information afresh from www.jolokia.org
\&     \-\-proxy            Proxy\-URL for HTTP(S) requests
\&     \-\-proxy\-user       Proxy user for proxy authentication
\&     \-\-proxy\-password   Proxy password for proxy authentication
\&     \-\-help             Print online help (and exit)
\&     \-\-version          Jmx4Perl version
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBjolokia\fR is a command line utility for managing the Jolokia agent,
which is used by jmx4perl for accessing remote \s-1JMX\s0 information. Several 
commands are available
.IP "download" 4
.IX Item "download"
This mode allows for downloading the latest Jolokia agent version compatible
with this Jmx4Perl installation or any other agent version. \s-1PGP\s0 is used
optionally for verifying the integrity of the downloaded artifacts.
.IP "info" 4
.IX Item "info"
For a given Jolokia agent, this manager gives you information about the version
of the agent and also allows for \s-1PGP\s0 validation.
.IP "repack" 4
.IX Item "repack"
A Jolokia agent can be repacked in order to add a policy file or to manipulate
the internal web.xml with this mode.
.PP
\&\f(CW\*(C`download\*(C'\fR ist the default mode when no non-opt argument is given, if a single
argument is given and this single argument is not one of the modes above, \f(CW\*(C`info\*(C'\fR is
used as the default command and the single argument is the file to examine.
.SH "META-DATA"
.IX Header "META-DATA"
Meta-data about the available Jolokia agents and their compatibility to given
Jmx4Perl versions is obtained from <http://www.jolokia.org/jolokia.meta>. This
meta data is cached locally in \fI~/.jolokia_meta\fR and only fetched once a
day. The meta download can be forced by using the option \f(CW\*(C`\-\-no\-cache\*(C'\fR.
.SH "VALIDATION"
.IX Header "VALIDATION"
\&\fBjolokia\fR uses \s-1PGP\s0 for validating all files downloaded. For this to work,
either the \s-1CPAN\s0 module Crypt::OpenPGP or GnuPG (<http://www.gnupg.org/>)
must be installed. If it is not available, validation falls back to simple
checksum validation with a \s-1SHA1\s0 alogrithm, or, if this is not possible to an
\&\s-1MD5\s0 check. Since the checksums are also downloaded over an insecure channel,
using \s-1PGP\s0 is highly recommended. The public key used for the signature check is
contained locally in the modules so there is no need to add the key manually or
to download it from an \s-1PGP\s0 key server. I.e. if GnuPG is used, the key will be
added to the local keystore for the first validation.
.SH "COMMANDS"
.IX Header "COMMANDS"
.SS "download"
.IX Subsection "download"
This commands allows for downloading a certain Jolokia agent from Jolokia's
Maven repository. The repository \s-1URL\s0 is taken from the meta descriptor, but can
be overridden with the \f(CW\*(C`\-\-repository\*(C'\fR option. Agents come in several flavors:
.IP "\(bu" 4
war
.Sp
The \s-1WAR\s0 agent is the most popular one and is used for instrumenting an \s-1JEE\s0
application server. It is a simple web application which needs to deployed on
the target server
.IP "\(bu" 4
osgi, osgi-bundle
.Sp
The OSGi agents can be used to access OSGi containers
.IP "\(bu" 4
mule
.Sp
For accessing a Mule \s-1ESB,\s0 this agent is the proper choice
.IP "\(bu" 4
jvm
.Sp
For all other Java server, which don't contain a servlet container, this agent
can be used. The only prerequisite is, that the application must run with an
Oracle Java 6 virtual machine
.PP
Much more information about those agents can be found at
<http://www.jolokia.org/agent.html>.
.PP
By default, the war agent is downloaded. The agent type (\*(L"war\*(R", \*(L"osgi\*(R",
\&\*(L"osgi-bundle\*(R", \*(L"mule\*(R" or \*(L"jvm\*(R" can be specified with the \f(CW\*(C`\-\-agent\*(C'\fR option.
.PP
Also by default, the latest agent version compatible with the installed
Jmx4Perl release is downloaded. A specific version can be given on the command
line also with the \f(CW\*(C`\-\-agent\*(C'\fR option, added after the agent type with a
\&':'. E.g. \f(CW\*(C`\-\-agent osgi:0.82\*(C'\fR will download the OSGi agent with version 0.82.
.PP
The output directory for the agent can be specified with the \f(CW\*(C`\-\-outdir\*(C'\fR
option. By default, the agent is stored in the current working directory.
.PP
A template can be downloaded with \f(CW\*(C`\-\-template\*(C'\fR. This option uses the same
syntax as \f(CW\*(C`\-\-agent\*(C'\fR, i.e. a version number can be optionally defined. If no
version number is provided, either the default template is downloaded, or, if
used together with \f(CW\*(C`\-\-agent\*(C'\fR, the template matching the agent's version is
used.
.SS "info"
.IX Subsection "info"
In order to determine the version number of an already downloaded agent, the
\&\f(CW\*(C`info\*(C'\fR command can be used. It takes as single argument the path to the agent,
e.g.
.PP
.Vb 1
\&   jolokia info ./jolokia.war
.Ve
.PP
The output contains information about the agent's type and version, whether a
security policy file is installed, if authentication is switched on and if the
\&\s-1JSR160\s0 proxy is active.
.PP
With the option \f(CW\*(C`\-\-verify\*(C'\fR an additional signature check can be performed,
where the signature is fetched from the Jolokia repository.
.PP
\&\f(CW\*(C`info\*(C'\fR is the default command if a single file argument is given (i.e. the
example above could be abreviated to \f(CW\*(C`jolokia ./jolokia.war\*(C'\fR).
.PP
If the option <\-\-policy> is provided, an included Jolokia policy file will be
printed out (if any).
.SS "repack"
.IX Subsection "repack"
Repack an Jolokia agent in order to switch on/off certain features.
.IP "\-\-policy / \-\-no\-policy" 4
.IX Item "--policy / --no-policy"
Adds a Jolokia policy file to the agent given as argument. By default a policy
file \fIjolokia\-access.xml\fR from the current directory is used, but this file
can be directly specified with the \f(CW\*(C`\-\-policy\-file\*(C'\fR option. For example,
.Sp
.Vb 1
\&   jolokia repack \-\-policy jolokia.war
.Ve
.Sp
add the local policy file \fIjolokia\-access.xml\fR to the \s-1WAR\s0 agent specified as
argument. A sample \fIjolokia\-access.xml\fR can be downloaded with \f(CW\*(C`jolokia
\&\-\-policy\*(C'\fR which will then be saved locally. The policy contained in agent can
be viewed with \f(CW\*(C`jolokia \-\-policy jolokia.war\*(C'\fR. \*(L"\s-1ACCESS
POLICY\*(R"\s0 in JMX::Jmx4Perl::Manual contains more information about Jolokia policy files.
.IP "\-\-security / \-\-no\-security" 4
.IX Item "--security / --no-security"
For \s-1WAR\s0 agents, the included \fIweb.xml\fR descriptor can contain authentication
configuration. This configuration (which is absent by default), associates an
\&\s-1URL\s0 pattern with a role. With \f(CW\*(C`jolokia repack \-\-security jolokia.war\*(C'\fR the
authenticatin mechanism is switched on with an associated role \*(L"Jolokia\*(R". You
need to configure your servlet container accordingly to connect a user to this
role. The role can be specified with \f(CW\*(C`\-\-security\-role\*(C'\fR (which implies 
\&\f(CW\*(C`\-\-security\*(C'\fR):
.Sp
.Vb 1
\&    jolokia repack \-\-security\-role JMX jolokia.war
.Ve
.IP "\-\-jsr160\-proxy / \-\-no\-jsr160\-proxy" 4
.IX Item "--jsr160-proxy / --no-jsr160-proxy"
By default, the \s-1WAR\s0 agent allows for \s-1JSR\-160\s0 proxy requests. This can be
switched by repacking the agent with \f(CW\*(C`\-\-no\-jsr160\-proxy\*(C'\fR:
.Sp
.Vb 1
\&    jolokia repack \-\-no\-jsr160 jolokia.war
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
check_jmx4perl \- a production ready Nagios check using JMX::Jmx4Perl
.PP
jmx4perl \- \s-1CLI\s0 for accessing the agents
.PP
j4psh \- readline based \s-1JMX\s0 shell with context sensitive command line
completion.
.SH "LICENSE"
.IX Header "LICENSE"
This file is part of jmx4perl.
.PP
Jmx4perl is free software: you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.
.PP
jmx4perl is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with jmx4perl.  If not, see <http://www.gnu.org/licenses/>.
.SH "AUTHOR"
.IX Header "AUTHOR"
roland@cpan.org
