#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_dell_poweredge_cpu(info):
    for chassisIndex, Index, StateSettings, Status, LocationName in info[0]:
        if LocationName != "" and StateSettings != "1":
            yield LocationName, None


def check_dell_poweredge_cpu(item, _no_params, info):
    for chassisIndex, Index, StateSettings, Status, LocationName in info[0]:
        if item == LocationName:
            BrandName = None
            for line in info[1]:
                if line[0] == chassisIndex and line[1] == Index:
                    BrandName = line[2]

            state_table = {
                "1" : ("other",           1),
                "2" : ("unknown",         1),
                "3" : ("",                0),
                "4" : ("non-critical",    1),
                "5" : ("critical",        2),
                "6" : ("non-recoverable", 2),
            }

            infotext, state = state_table.get(Status, ( "unknown state", 2 ))
            if BrandName:
                infotext += " " + BrandName

            return state, infotext


check_info["dell_poweredge_cpu"] = {
    "check_function"        : check_dell_poweredge_cpu,
    "inventory_function"    : inventory_dell_poweredge_cpu,
    "service_description"   : "%s",
    "snmp_info"             : [( ".1.3.6.1.4.1.674.10892.5.4.1100.32.1", [
                                      1, # processorDevicechassisIndex
                                      2, # processorDeviceIndex
                                      4, # processorDeviceStateSettings
                                      5, # processorDeviceStatus
                                      7, # processorDeviceLocationName
                               ]),
                               ( ".1.3.6.1.4.1.674.10892.5.4.1100.30.1", [
                                       1, # processorDevicechassisIndex
                                       2, # processorDeviceIndex
                                      23, # processorDeviceBrandName
                                ])
                              ],
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') == ".1.3.6.1.4.1.674.10892.5",
}

